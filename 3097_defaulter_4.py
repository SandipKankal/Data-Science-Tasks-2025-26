# -*- coding: utf-8 -*-
"""3097 defaulter 4

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12Gkjm4rpqDHf32RKiRlBhI9QwnhfvjWi
"""

!pip install pandas
!pip install scikit-learn
!pip install matplotlib
!pip install seaborn

from google.colab import files
uploaded = files.upload()

import pandas as pd

data = pd.read_csv('/content/df_Clean.csv')
print(data.head())
print(data.columns)

# Select features and target
categorical_cols = ['Region', 'State', 'Area', 'City', 'Consumer_profile',
                    'Product_category', 'Product_type', 'Purchased_from', 'Purpose']

numerical_cols = ['AC_1001_Issue', 'AC_1002_Issue', 'AC_1003_Issue',
                  'TV_2001_Issue', 'TV_2002_Issue', 'TV_2003_Issue',
                  'Claim_Value', 'Service_Centre', 'Product_Age', 'Call_details']

X = data[categorical_cols + numerical_cols]
y = data['Fraud']

# One-hot encode categorical columns
X = pd.get_dummies(X, columns=categorical_cols, drop_first=True)

print(X.head())

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.ensemble import RandomForestClassifier

model = RandomForestClassifier(n_estimators=200, random_state=42)
model.fit(X_train, y_train)

from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

import seaborn as sns
import matplotlib.pyplot as plt

cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()