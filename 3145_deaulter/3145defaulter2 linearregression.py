# -*- coding: utf-8 -*-
"""linear regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1la8JiF_G67Wy3rJks11lyhG9ssziLHvD
"""

import kagglehub

# Download latest version
path = kagglehub.dataset_download("rohankayan/years-of-experience-and-salary-dataset")

print("Path to dataset files:", path)

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

df = pd.read_csv('/root/.cache/kagglehub/datasets/rohankayan/years-of-experience-and-salary-dataset/versions/1/Salary_Data.csv')

print("First 5 rows of dataset:")
print(df.head())

print("\nDataset info:")
print(df.info())
print("\nStatistics:")
print(df.describe())

df.columns = [c.strip() for c in df.columns]

if 'YearsExperience' in df.columns:
    df = df.rename(columns={'YearsExperience': 'Experience'})
elif 'Years of Experience' in df.columns:
    df = df.rename(columns={'Years of Experience': 'Experience'})

print("\nColumns:", df.columns)

X = df[['Experience']]
y = df['Salary']

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("\nMean Squared Error (MSE):", mse)
print("RÂ² Score:", r2)

print("\nModel slope (coefficient):", model.coef_[0])
print("Model intercept:", model.intercept_)

plt.figure(figsize=(8,6))
plt.scatter(X, y, color='blue', label='Actual data')
plt.plot(X, model.predict(X), color='red', label='Fitted line')
plt.xlabel('Experience')
plt.ylabel('Salary')
plt.title('Experience vs Salary (Linear Regression)')
plt.legend()
plt.show()

plt.figure(figsize=(8,6))
plt.scatter(X_test, y_test, color='green', label='Test data (actual)')
plt.scatter(X_test, y_pred, color='red', label='Test data (predicted)')
plt.xlabel('Experience')
plt.ylabel('Salary')
plt.title('Actual vs Predicted on Test Set')
plt.legend()
plt.show()